// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=true,sel=address[0..2],a=r0,b=r1,c=r2,d=r3,e=r4,f=r5,g=r6,h=r7);
    And(a=r0,b=load,out=rorw0);
    And(a=r1,b=load,out=rorw1);
    And(a=r2,b=load,out=rorw2);
    And(a=r3,b=load,out=rorw3);
    And(a=r4,b=load,out=rorw4);
    And(a=r5,b=load,out=rorw5);
    And(a=r6,b=load,out=rorw6);
    And(a=r7,b=load,out=rorw7);
    RAM512(in=in,load=rorw0,address=address[3..11],out=out0);
    RAM512(in=in,load=rorw1,address=address[3..11],out=out1);
    RAM512(in=in,load=rorw2,address=address[3..11],out=out2);
    RAM512(in=in,load=rorw3,address=address[3..11],out=out3);
    RAM512(in=in,load=rorw4,address=address[3..11],out=out4);
    RAM512(in=in,load=rorw5,address=address[3..11],out=out5);
    RAM512(in=in,load=rorw6,address=address[3..11],out=out6);
    RAM512(in=in,load=rorw7,address=address[3..11],out=out7);
    Mux8Way16(a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7,sel=address[0..2],out=out);
}